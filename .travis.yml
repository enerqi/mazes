language: rust
sudo: required # necessary to build sdl2
cache: cargo

addons:
  apt:
    update: true
    packages:
      # kcov compilation
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

matrix:
  fast_finish: true
  include:
    # - rust: stable
    - rust: beta

install:
  # Trusty used by travis is too old, recent rust sdl2 will have link failures against old sdl2 libs.
  - bash scripts/travis-install-sdl2.sh

before_script:
  - rustup component add clippy-preview


# Better rust debugging info.
env:
  global:
    - RUST_BACKTRACE: full
    - RUSTFLAGS="-C link-dead-code"
    - LD_LIBRARY_PATH: "/usr/local/lib"  # Link path for sdl2 libraries

branches:
  only:
    - 2018-edition

# build, test and check benchmarks compile
script:
  - cargo build --verbose
  # clippy warnings fail the build
  - cargo clippy -- -D warnings
  # clippy on tests and doc tests etc.
  # - cargo clippy --all-targets -- -D warnings
  - cargo test --verbose
  # ensure performance tests compile
  - 'if [ $TRAVIS_RUST_VERSION = beta ]; then cargo bench --no-run; fi'

# After built rust and run the tests once, check the code coverage
after_success: |
  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
  tar xzf master.tar.gz &&
  cd kcov-master &&
  mkdir build &&
  cd build &&
  cmake .. &&
  make &&
  make install DESTDIR=../../kcov-build &&
  cd ../.. &&
  rm -rf kcov-master &&
  for file in target/debug/mazes-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  bash <(curl -s https://codecov.io/bash) &&
  echo "Uploaded code coverage"

notifications:
  email:
    on_success: never
